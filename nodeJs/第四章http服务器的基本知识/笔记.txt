


response:反映回答

response.write()
response.end("str")

以上两个可以合并成一个 

response.end("str")

response.setHeader("Content-Length",boyd.length);
response.setHeader("Content-Type","text/plain");
response.statusCode=200

resquest.method 请求方式

buffer.这个方法很强大非常强大，可以好好看看

items.map(function(item,i){},thisArg);

arr.map(callback)

里面的函数可以填写三个值

callback 的第一个参数，数组中当前传递被传递的元素，
callback 的第二个参数，数组中当前传递被传递的索引，
callback 的第三个参数，调用 map 方法的数组，

例如index.js下面的testThis函数

如果 thisArg 参数有值，则每次 callback 函数被调用的时候，this 都会指向 thisArg 参数上的这个对象。如果省略了 thisArg 参数,或者赋值为 null 或 undefined，则 this 指向全局对象 。


DELETE 请求:






__dirname:当前目录 （我的天，这样。。。唉）

STREAM.PIPE()

fs.stat(path,function(err,stat){});

这个方法是异步获取文件信息的语法格式回调函数接受两个参数

err：
    code：ENOENT；没有这个文件
    path：path;也就是错误的路径
    syscall：
stat:其实返回的是各种方法
    stats.isFile()

下面是链接：
http://www.runoob.com/nodejs/nodejs-fs.html

var stream=fs.createReadStream(path)

方法是创建文件流;

stream.pipe(response);

这个的意思是 path路径里面的文件建成数据流 流到response，response做了很多的事情比如response.end()

管道提供了一个输出流到输入流的机制。通常我们用于从一个流中获取数据并将数据传递到另外一个流中。


















